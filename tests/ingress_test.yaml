# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: Test Ingress
templates:
  - templates/ingress.yaml
chart:
  version: 0.1.0
  appVersion: 1.4.5
release:
  name: kanidm-helm-test
  namespace: test
set:
  ingress:
    enabled: true
tests:
  - it: should exist and set correct Kind
    asserts:
      - isKind:
          of: Ingress
      - hasDocuments:
          count: 1
      - containsDocument:
          kind: Ingress
          apiVersion: networking.k8s.io/v1

  - it: should set correct namespace
    asserts:
      - equal:
          path: metadata.namespace
          value: test

  - it: should set correct chart details
    asserts:
      - matchRegex:
          path: metadata.name
          pattern: kanidm
      - equal:
          path: metadata.labels
          value:
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: kanidm
            app.kubernetes.io/instance: kanidm-helm-test
            app.kubernetes.io/version: 1.4.5
            app.kubernetes.io/component: ingress
            helm.sh/chart: kanidm-0.1.0

  - it: should include extra annotations and labels
    set:
      global.annotations:
        test.sh/my.annotation.0: beep
      ingress.annotations:
        test.sh/my.annotation.1: boop
      global.labels.app0: bippity
      ingress.labels.app1: boppity
    asserts:
      - isSubset:
          path: metadata.annotations
          content:
            test.sh/my.annotation.0: beep
            test.sh/my.annotation.1: boop
      - isSubset:
          path: metadata.labels
          content:
            app0: bippity
            app1: boppity

  - it: should contain at least one valid host
    set:
      ingress:
        enabled: true
        host: "example.com"
    asserts:
      - notLengthEqual:
          path: spec.rules
          count: 0
      - isType:
          path: spec.rules[0].host
          type: string
      - isNotNullOrEmpty:
          path: spec.rules[0].host
      - equal:
          path: spec.rules[0].host
          value: example.com
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.name
          value: kanidm-https

  - it: should always contain some TLS block
    set:
      ingress:
        enabled: true
        host: "example.com"
    asserts:
      - notLengthEqual:
          path: spec.tls
          count: 0
      - notLengthEqual:
          path: spec.tls.hosts
          count: 0
      - exists:
          path: spec.tls[0].secretName

  - it: should set domain to kanidm.domain if ingress.host not provided
    set:
      ingress:
        enabled: true
      kanidm:
        domain: "example.com"
    asserts:
      - equal:
          path: spec.rules[0].host
          value: example.com
      - equal:
          path: spec.tls[0].hosts[0]
          value: example.com

  - it: should not exist if ingress.enabled is false
    set:
      ingress:
        enabled: false
    asserts:
      - hasDocuments:
          count: 0
